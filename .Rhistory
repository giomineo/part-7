### Exercise 3 ###
library(shiny)
library(ggplot2)
# Create a shiny server that creates a scatterplot.
# It should take as an input the x_var, y_var, color, and size
# Save the result of `renderPlot` to output$scatter
shinyServer(function(input, output) {
output$scatter <- renderPlot({
# Store x and y values to plot
x <- mpg[[input$x_var]]
y <- mpg[[input$y_var]]
# Store the title of the graph in a variable
title <- paste0("MPG Dataset: ", input$x_var, " v.s.", input$y_var)
# Create ggplot scatter
p <- ggplot() +
geom_point(mapping = aes(x = x, y = y),
size = input$size,
color = input$color) +
labs(x = input$x_var, y = input$y_var, title = title)
p
})
})
# UI for scatterplot
library(shiny)
# Get a vector of column names (from `mpg`) to use as select inputs
select_values <- colnames(mpg)
# Create a shinyUI with a `fluidPage` layout
shinyUI(fluidPage(
# A page header
h1("MPG Dataset Exploration"),
# Add a select input for the x variable
selectInput(
"x_var",
label = "X Variable",
choices = select_values,
selected = "displ"
),
# Add a select input for the y variable
selectInput(
"y_var",
label = "Y Variable",
choices = select_values,
selected = "cyl"
),
# Add a sliderInput to set the size of each point
sliderInput("size", label = "Size of point", min = 1, max = 10, value = 5),
# Add a selectInput that allows you to select a color from a list of choices
selectInput(
"color",
label = "Color",
choices = list("Red" = "red", "Blue" = "blue", "Green" = "green")
),
# Plot the output with the name "scatter"
plotOutput("scatter")
))
shinyApp(ui = my_ui, server = my_server)
runApp()
